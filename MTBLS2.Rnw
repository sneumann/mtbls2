%
% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
%
%\VignetteIndexEntry{MTBLS2 Preprocessing and Analysis with xcms}
%\VignetteDepends{xcms,CAMERA}
%\VignetteKeywords{preprocess, analysis, alignment, mass spectrometry}
%%\VignettePackage{rISA}
\documentclass[12pt]{article}
\usepackage{hyperref}

\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\textit{#1}}}
\newcommand{\Rfunarg}[1]{{\textit{#1}}}

\begin{document}
\SweaveOpts{concordance=TRUE}

\title{MTBLS2 Processing and Analysis with xcms, CAMERA and export to Metabolights}
\author{Kenneth Haug \and Reza M. Salek \and Pablo Conesa \and Mark Williams \and Mark Rijnbeek \and Paula de Matos \and  Eamonn Maguire \and Tejasvi Mahendraker \and Steffen Neumann \and Philippe Rocca-Serra \and Susanna-Assunta Sansone \and Julian L. Griffin \and Christoph Steinbeck}
\date{\today}
\maketitle

<<LibraryPreload>>=
library(ISA2R)
library(xcms)
library(CAMERA)

@

Since 2006, the Bioconductor package \Rpackage{xcms} provides a rich set of
algorithms for mass spectrometry data processing. Typically, \Rpackage{xcms} will
create an \Rclass{xcmsSet} object from several raw data files in an assay,
which are obtained from the samples in the study.  
Allowed raw data formats are netCDF, mzData, mzXML and mzML.

An ISAtab archive will contain the metadata description in 
several tab-separated files. (One of) the assay files contains the column ``Raw Spectral Data File``
with the paths to the mass spectral raw data files in one of the above formats. 

With the combination of \Rpackage{ISA2R} and \Rpackage{xcms}, we can convert the MS raw data 
in an ISAtab archive into an \Rclass{xcmsSet}:

<<PeakPicking, cache=true>>=

ISAmtbls2 <- isatab2bioc()

a.filename <- "a_mtbl2_metabolite profiling_mass spectrometry.txt"

mtbls2Set <- processAssayXcmsSet(ISAmtbls2, a.filename,
                               method="centWave", prefilter=c(3,200),
                               snthr=5, verbose.columns=T,
#                               ppm=25, scanrange=c(0,2900),
                               ppm=25, scanrange=c(2000,2100),
                               peakwidth=c(5,12),
                               nSlaves=2)

mtbls2Set

@

In the following steps, we perform a grouping. Because the UPLC system used here 
has very stable retention times, we just use the retention time correction step 
as quality control of the raw data. After that, \Rmethod{fillPeaks()} will integrate 
the raw data for those features, which were not detected in some of the samples.

<<RTcheckandGroup, cache=true>>=
mtbls2Set <- group(mtbls2Set, minfrac=0.75, bw=2)
retcor(mtbls2Set, plottype="mdevden")
mtbls2Set <- fillPeaks(mtbls2Set)

@

The final \Rclass{xcmsSet} represents a rectangular matrix of mass spectral features,
which were detected across the samples. The dimensionality is $M \times N$,
where $M$ denotes the number of samples in the assay, and $N$ the number
of features grouped across the samples. Several options exist to
quantify the individual intensities. For each feature,
additional attributes are available, such as the minimum/maximum and
average retenion time and m/z values. 
These attributes and the intensity matrix could already be exported to conform 
to the specification for the mzTab format. 

In a typical mass spectrometry metabolomics workflow, the features
detected by \Rpackage{xcms} are further processed by \Rpackage{CAMERA}, another Bioconductor
package. C\Rpackage{AMERA} provides several algorithms to determine which
features originate from a single metabolite, and performs the
annotation of isotopic peaks and ion species such as adducts, cluster
ions or common neutral losses. 

<<CAMERA annotation and Stats, cache=true>>=

an <- xsAnnotate(mtbls2Set,
                 sample=seq(1,length(sampnames(mtbls2Set))),
                 nSlaves=2)

an <- groupFWHM(an)
an <- findIsotopes(an)  # optional but recommended.
an <- groupCorr(an,
                graphMethod="lpc",
                calcIso = TRUE,
                calcCiS = TRUE,
                calcCaS = TRUE,
                cor_eic_th=0.5)

## Setup ruleSet
rs <- new("ruleSet")
rs@ionlistfile <- "ions.csv"
rs@neutraladditionfile <- "neutraladdition.csv"
rs@neutrallossfile <- "neutralloss.csv"

rs <- readLists(rs)
rs <- setDefaultParams(rs)
rs <- generateRules(rs)
dim(rs@rules)

an <- findAdducts(an,
                  rules=rs@rules,
                  polarity="positive")

@ 

These annotations can also be added to
the metabolite assignment file to specify the ``charge'' and
``modification''. Here, we use 
the m/z and retention of the xcmsSet groups. As intensities, we can use any of the 
alternative quantification approaches from \Rmethod{groupval()}. From \Rpackage{CAMERA}, we obtain the charge, 
deduced from the isotopic pattern. 

<<collect, cache=true>>=

##
## Get annotated peaklist
##

pl <- getPeaklist(an)

charge <- sapply(an@isotopes, function(x) {ifelse( length(x) > 0, x$charge, NA) })
abundance <- groupval(an@xcmsSet, value="into")

@ 

This report can now be saved as ``Metabolite Assignment File'', which is modelled after the mzTab 
specification\footnote{\url{http://www.psidev.info/index.php?q=node/80}}. 
Many of the other mzTab columns are left empty.

<<assembleMAF, chache=true>>=

##
## load ISA assay files
## Alejandra: This we should get from the ISAmtbls2 read in above!
## 

a.samples <- ISAmtbls2$samples_per_assay_filename[[ a.filename ]]

##
## These columns are defined by mzTab
##

maf.std.colnames <- c("identifier", "chemical_formula", "description",
"mass_to_charge", "fragmentation", "charge", "retention_time",
"taxid", "species", "database", "database_version", "reliability",
"uri", "search_engine", "search_engine_score", "modifications",
"smallmolecule_abundance_sub", "smallmolecule_abundance_stdev_sub",
"smallmolecule_abundance_std_error_sub")

##
## Plus the columns for the sample intensities
##
all.colnames <- c(maf.std.colnames, a.samples)

##
## Now assemble new maf
##

l <- nrow(pl)

maf <- data.frame(identifier = character(l), 
                  chemical_formula = character(l), 
                  description = character(l), 
                  mass_to_charge = pl$mz, 
                  fragmentation = character(l), 
                  charge = charge, 
                  retention_time = pl$rt, 
                  taxid = character(l), 
                  species = character(l), 
                  database = character(l), 
                  database_version = character(l), 
                  reliability = character(l), 
                  uri = character(l), 
                  search_engine = character(l), 
                  search_engine_score = character(l),
                  modifications = character(l), 
                  smallmolecule_abundance_sub = character(l),
                  smallmolecule_abundance_stdev_sub = character(l), 
                  smallmolecule_abundance_std_error_sub = character(l),
                  abundance, stringsAsFactors=FALSE)


maf_character <- apply(maf, 2, as.character)

@ 

Finally, the constructed dataframe is written to a CSV file. If for
some of the masses additional identification information was obtained,
e.g. through MS/MS measurements, this information can be added after
the automated xcms and CAMERA pipeline.

<<export>>=
##
## Alejandra: Here we need to add the *_maf.csv to the ISAmtbls2 assay file.
## We need to ask Metabolights whether it is required to quote the numbers, 
## or if we can get away with write.table(maf, file=...)

write.table(maf_character, file="a_mtbl2_metabolite profiling_mass spectrometry_maf2.csv",
            row.names=FALSE, col.names=all.colnames, quote=TRUE, sep="\t", na="\"\"")


addAssayMetadata(ISAmtbls2, a.filename,"Metabolite Assignment File","a_mtbl2_metabolite profiling_mass spectrometry_maf2.csv" )

write.assay.file(ISAmtbls2, a.filename)

date()
sessionInfo()
@ 

\end{document}
